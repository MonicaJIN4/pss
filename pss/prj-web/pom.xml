<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>edu.se</groupId>
  <artifactId>prj-web</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>prj-web Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- ***** 1001.[javaee31][props] -->
    <javaee31.servletapi.version>3.1.0</javaee31.servletapi.version>
    <javaee31.jspapi.version>2.2</javaee31.jspapi.version>
    <javaee31.jstl.version>1.2</javaee31.jstl.version>
    <javaee31.taglibs.version>1.1.2</javaee31.taglibs.version>
    <jdbc.mysql.version>8.0.15</jdbc.mysql.version>
  </properties>


  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>${javaee31.servletapi.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.servlet.jsp</groupId>
      <artifactId>jsp-api</artifactId>
      <version>${javaee31.jspapi.version}</version>
      <scope>provided</scope>
    </dependency>
    <!-- 2) jstl和taglibs的jar包，容器中没有； -->
    <!-- scope默认为compile，打包时会复制到lib目录； -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>${javaee31.jstl.version}</version>
    </dependency>
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>${javaee31.taglibs.version}</version>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${jdbc.mysql.version}</version>
    </dependency>
    <!-- ********************************************************************** -->
    <!-- ********************************************************************** -->
    <!-- ***** 3000. [third liuvei common][jar] -->
    <!-- ********************************************************************** -->
    <!-- 说明1：本jar包是第三方包，需要先以命令行形式安装在本地仓库； -->
    <!-- 说明2：如使私服，且已在私服部署本包，则直接依赖即可。 -->
    <dependency>
      <groupId>com.liuvei.common</groupId>
      <artifactId>liuvei-common</artifactId>
      <version>1.0.0</version>
    </dependency>

    <!-- ********************************************************************** -->

    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>4.1.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml-schemas</artifactId>
      <version>3.15</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>3.15</version>
    </dependency>

  </dependencies>


  <build>
    <finalName>prj-web</finalName>
    <plugins>
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.4.14.v20181114</version>
        <configuration>
          <webApp>
            <contextPath>/${project.artifactId}</contextPath>
            <descriptor>${basedir}/src/main/webapp/WEB-INF/web.xml</descriptor>
          </webApp>
          <webAppSourceDirectory>${project.basedir}/src/main/webapp</webAppSourceDirectory>
          <scanIntervalSeconds>1</scanIntervalSeconds>
          <httpConnector>
            <port>8300</port>
          </httpConnector>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
      </plugins>
    </pluginManagement>
  </build>
</project>
